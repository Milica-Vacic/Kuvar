{"POST":"let allergies=param('allergies',null) //niz id-eva
let cat_id = param('cat_id',null) //niz id-eva
let usr_id = param ('usr_id',null)
let usr_name = param ('usr_name',null)
let ing_type = param('ing_type',null)
let rec_name = param('rec_name',null)
let ingredients = param('ingredients',null) //niz id-eva
let sort = param('sort',null) // string 'new', 'popular' ili 'trending'
let link ='http://108m122.e2.mars-hosting.com/api/images/'
let limit=param('limit',null)
write(\"alg\", allergies)
write(\"prefs\", cat_id)

let strSub = (ingredients!==null?`count(distinct ri.ing_id)-${ingredients.length}`:'null')


let qb=db.select(`r.*, concat('[',group_concat(DISTINCT '\"','${link}',ir.img_id,'\"'),']') as img_links, avg(rat_value) as rating,
concat('[',group_concat(DISTINCT ir.img_id),']') as img_ids,
count(distinct ri.ing_id) as ing_num,
${strSub} as ing_missing,
(SELECT avg(rat_value)*count(rat_id) FROM ratings rat
    WHERE (rec_id=r.rec_id) AND (DATEDIFF(now(),rat_input_time)<15) AND ( rat_value>=4 )) as trend`)

.from('recipes r')
.leftJoin('images_recipes ir','r.rec_id=ir.rec_id')
.leftJoin('ratings rat', 'rat.rec_id=r.rec_id')
.innerJoin('recipes_ingredients ri','ri.rec_id=r.rec_id')
.groupBy('rec_id')



if (cat_id!==null) {
    let sqlIng = db.select('rct_id').from('recipe_categories').where('rct_id',cat_id).toSql()
    qb.where(`r.rec_id in (select distinct rec_id from recipe_category_recipes ri1 where not exists
    (select rct_id from recipe_categories list where rct_id in (${sqlIng}) and not exists(
    select rec_id from recipe_category_recipes ri2 where (ri1.rec_id=ri2.rec_id) and (ri2.rct_id=list.rct_id))))`)
}
if (usr_id!==null){
    qb.where('r.usr_id',usr_id)
}
if (usr_name!==null){
    qb.innerJoin('users u','u.usr_id=r.usr_id').where('usr_username',usr_name)
}
if (ing_type!==null){
    qb.where('itp_id',ing_type)
}
if (rec_name!==null){
    qb.where(`rec_name LIKE CONCAT('%','${rec_name}', '%')`)
}

if (allergies!==null){
    let sqlIng = db.select('ing_id').from('ingredients i').where('ing_id',allergies).toSql()
    qb.where(`r.rec_id not in (select distinct ri.rec_id from recipes_ingredients ri where ri.ing_id in (${sqlIng}))`)
}


if (ingredients!==null){  //AKO UNET POGRESAN ID ZA SAS SAMO IGNORISE TAJ SASTOJAK!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    let sqlIng = db.select('ing_id').from('ingredients i').where('ing_id',ingredients).toSql()
    qb.where(`r.rec_id in (select distinct rec_id from recipes_ingredients ri1 where not exists
    (select ing_id from ingredients list where ing_id in (${sqlIng}) and not exists(
    select rec_id from recipes_ingredients ri2 where (ri1.rec_id=ri2.rec_id) and (ri2.ing_id=list.ing_id))))`)
    .orderBy(`ing_missing`)
    write(ingredients.length)
    // let condition = db.condition('rec_id', 5)
    // condition.and('rec_id', '!=', 7)
    // condition.or('rec_id', 17)
    // qb.where(condition)

}

if (sort==='popular'){
    qb.orderBy('rating DESC')
}

if (sort==='new'){
    qb.orderBy('rec_input_time DESC')
}

if (sort==='trending'){
    qb.orderBy('trend DESC')
}


let sql = qb.toSql()
if (limit!==null){
    sql+=` LIMIT ${limit}`
}
let res
try{
    res=db.query(sql)
}
catch(e)
{
write('res', 'err')
write('msg', 'SQL error')
write('err', e)
exit()
}
if (res.rows===0){
write('res', 'err')
write('msg', 'No recipes found')
exit()
}


for (let row of res) {
    row.img_links = JSON.parse(row.img_links)
    row.img_ids = JSON.parse(row.img_ids)
}

write('res', 'ok')
write('recipes', res)","META":{"language":"JavaScript"}}